Архитектура BudgetApp

frontend

/ – Промо-страница (лендинг)
    Функционал:
        шапка: слева иконка приложение, кнопка войти справа
        Краткое описание возможностей приложения.
        Кнопки CTA: «Попробовать бесплатно» (ведет на /register).
        Отзывы пользователей.
        FAQ (минимум 3 вопроса).

/login – Авторизация
    Функционал:
        Форма ввода email/пароля.
        Ссылки: «Забыли пароль?»(ведет на /reset-password) и «Регистрация».

/register – Регистрация
    Функционал:
        Форма: email, пароль, подтверждение пароля.
        Валидация:
            Email соответствует regex.
            Пароль не менее 8 символов.
            Галочка «Принимаю условия использования» (обязательная).

/reset-password – Сброс пароля и установка нового
    Функционал:
    Поля: email, новый пароль, подтверждение.

/dashboard – Главная (Dashboard)
    Краткая сводка: баланс, доходы/расходы за месяц.
    График распределения расходов по категориям (круговая диаграмма).
    Последние транзакции (5-10 штук).

/transactions – Все транзакции
    Таблица или список с фильтрами:
        По дате (неделя/месяц/год).
        По категориям.
        По типу (доход/расход).
        Поиск по описанию.
        Кнопка "Добавить транзакцию" (открывает модалку/форму).

/budget – Планирование бюджета
    Установка лимитов для категорий (например, "Еда – 10 000 руб/мес").
    Прогресс-бары по категориям (сколько осталось до лимита).
    Уведомления о превышении (можно реализовать через toast).

/statistics – Детальная статистика
    Графики:
        Динамика доходов/расходов за период (линейный график).
        Сравнение месяцев (столбчатая диаграмма).
        Экспорт данных в CSV/PDF.

/categories – Управление категориями
    Добавление/удаление/редактирование категорий.
    Назначение иконок и цветов для визуализации.

/settings – Настройки
    Валюта, язык, тема (светлая/темная).
    Резервное копирование данных (экспорт/импорт).

/history – История изменений
    Лог всех действий пользователя (аудит):
        Добавление/удаление транзакций.
        Изменение лимитов бюджета.
        Редактирование категорий.
        Фильтры:
            По дате (за день/неделю/месяц).
            По типу действия.
            Восстановление данных (отмена изменений).

/support – Техническая поддержка
    Функционал:
        Форма обращения в поддержку:
            Выбор типа проблемы (баг, вопрос, предложение).
            Поле для описания + прикрепление скриншотов.
            История обращений (статус: «в обработке», «решено»).
        FAQ (частые вопросы).
        Контакты (email, Telegram-бот).

/help – Справка
    Функционал:
    Документация по использованию приложения:
    Как добавить транзакцию.
    Как настроить бюджет.



store

auth.store.js
transactions.store.js
categories.store.js
budget.store.js
goals.store.js
history.store.js
ui.store.js


стек:
    bootstrap,
    chart.js,
    react^19.0.0,
    react-dom,
    react-router^7.5.0
    React Hook Form
    Zustand


/api/auth/login
/api/auth/register
/api/auth/reset-password
/api/auth/me (проверка токена)

// GET /api/budget - получить общий бюджет
// PUT /api/budget - обновить общий бюджет
// GET /api/budget/limits - получить лимиты по категориям
// POST /api/budget/limits - установить/обновить лимит для категории

// GET /api/categories - получить все категории пользователя
// POST /api/categories - создать новую категорию
// PUT /api/categories/:id - обновить категорию
// DELETE /api/categories/:id - удалить категорию

// GET /api/goals - получить все цели пользователя
// POST /api/goals - создать новую цель
// PUT /api/goals/:id - обновить цель
// DELETE /api/goals/:id - удалить цель
// POST /api/goals/:id/add - добавить сумму к цели

// GET /api/history - получить историю с фильтрами
// POST /api/history - добавить запись в историю
// POST /api/history/:id/undo - отменить действие
